trycatchdemo

==============
int marks[]=new int[5];
		
		try
		{
			System.out.println(2/2);
			marks[7]=68;
		}	
		catch(ArithmeticException | ArrayIndexOutOfBoundsException  exObj ) // call the proper catch block
		{
			System.out.println(exObj.getMessage());
			
		}
	=====================	
		userinputexample
		-----------------------
		scanner scanner = new Scanner(System.in);
		
          try
		{
			System.out.println("enter the value of number1 ");
			int number1 = scanner.nextInt();
			
			System.out.println("enter the value of number2 ");
			int number2 = scanner.nextInt();
			
			int result = number1/number2;
			System.out.println("Result = "+ result);
		}
		catch (ArithmeticException e) 
		{
			System.out.println("do not enter zero");
		}
		catch(InputMismatchException ex)
		{
			System.out.println("enter only digits");
		}
		
		
		===================
		user definded expection
		=================
		class InValidAgeException extends RuntimeException
{
	String msg;

	InValidAgeException(String msg) {
		super();
		this.msg = msg;
	}

	public String getMsg() {
		return msg;
	}
	
}

class User
{
	public void checkEligiblity(int age)
	{
		if(age>=18)
			System.out.println("you are eligible to vote");
		else
			throw new InValidAgeException("age is less, It should be minimum 18");
	}
}



public class UserDefinedException {

	public static void main(String[] args) {

		User user = new User();
		try
		{
			user.checkEligiblity(3);
		}
		catch (InValidAgeException e) 
		{
			System.out.println("exception occured :"+ e.getMsg());
		}
		
	}

}



=================
class InValidAgeException extends RuntimeException
{
	String msg;

	InValidAgeException(String msg) {
		super();
		this.msg = msg;
	}

	public String getMsg() {
		return msg;
	}
	
}

class User
{
	public void checkEligiblity(int age)
	{
		if(age>=18)
			System.out.println("you are eligible to vote");
		else
			throw new InValidAgeException("age is less, It should be minimum 18");
	}
}



public class UserDefinedException {

	public static void main(String[] args) {

		User user = new User();
		try
		{
			user.checkEligiblity(3);
		}
		catch (InValidAgeException e) 
		{
			System.out.println("exception occured :"+ e.getMsg());
		}
		
	}

}
=====================

task employee
================
package Day6;
import java.util.*;
class Employee{
	  String firstName;
	  String lastName;
	  Employee(String firstName,String lastName){
		 
		 this.firstName=firstName;
		this.lastName=lastName;
	  }
	 public void validate() {
		 if(firstName==null || lastName==null) {
			 throw new NullPointerException("FirstName and LastName cannot be null.");
		 }
		 if(firstName.length()<4 || lastName.length()<4) {
			 throw new InvalidNameException("Username should be minimum 4 Charachters.");
		 }
	 }
	 
 }
 
 class InvalidNameException extends RuntimeException{
	 public InvalidNameException(String msg) {
	     super(msg);
	 }
 }
public class Task3 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the First name: ");
		String firstName=sc.nextLine();
		System.out.println("Enter the lastName: ");
		String lastName=sc.nextLine();
	try {
		Employee emp=new Employee(firstName,lastName);
		emp.validate();
		System.out.println("Employee details are valid");
	}
	catch(NullPointerException e) {
		System.out.println("Error "+e.getMessage());
	}
    catch(InvalidNameException ex) {
    	System.out.println("Error"+ex.getMessage());
    }
	}

}
