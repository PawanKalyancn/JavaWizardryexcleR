iterative colection
=================


package com.excelr.day8.collections;

import java.util.ArrayList;

public class IterateDemo2 {

	public static void main(String[] args) {

		ArrayList<Product> products = new ArrayList<Product>();
		products.add(new Product(1,"laptop", "electronics", 80000));
		products.add(new Product(2,"table", "furniture", 55000));
		products.add(new Product(3,"pendrive", "electronics", 1000));
		products.add(new Product(4,"t-shirt", "cloth", 4000));
		
	     System.out.println(products);
	     
	     System.out.println("------------------");
	     
	     for(Product product : products)
	    	 System.out.println(product);

		
	}

}


package com.excelr.day8.collections;

public class Product {

	int id;
	String name;
	String category;
	int price;
	
	Product(int id, String name, String category, int price) {
		super();
		this.id = id;
		this.name = name;
		this.category = category;
		this.price = price;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", category=" + category + ", price=" + price + "]";
	}
	
	

}

	ListIterator<Integer> listItr =	nums.listIterator();
	
	
	System.out.println("---backward direction-----");
	while(listItr.hasPrevious())
		System.out.println(listItr.previous());
	
	
	System.out.println("---forward direction-----");
	while(listItr.hasNext())
		System.out.println(listItr.next());
	
	
	System.out.println("---backward direction-----");
	while(listItr.hasPrevious())
		System.out.println(listItr.previous());
	
		

â€”----------------------------------------------------------------------------------

package com.excelr.day8.collections;

import java.util.ArrayList;
import java.util.Iterator;

public class CursorClass {

	public static void main(String[] args) {

		ArrayList<Integer> nums = new ArrayList<Integer>();
		nums.add(1);
		nums.add(2);
		nums.add(3);
		nums.add(4);
		nums.add(5);
		
		System.out.println("num1 :"+ nums);
		
	Iterator<Integer> itr = nums.iterator();
	 
	 while(itr.hasNext())
	  {
		  System.out.println(itr.next());
	  }
		  
	
		
		
		
	}

}
=================================
stack demo
================================
Stack<Integer> stack = new Stack<Integer>();
		stack.add(1);
		stack.push(2);
		stack.push(3);
		
		
		System.out.println("elements of stack are :"+ stack);
		
		//iterating the 
		for(int num :stack)
			System.out.println(num);
		
	  System.out.println("-----------pop out the element--------");
	  stack.pop();
	  System.out.println("after pop element is =:"+ stack);

	  stack.pop();
	  System.out.println("after pop element is =:"+ stack);
