package com.excler.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.excler.entity.Product;
import com.excler.repository.ProductRepository;

@RestController
@RequestMapping("/api/v1")
public class ProductContoller {

	@Autowired
	ProductRepository productRepository;
	 
	@PostMapping("/employee")
	public Product addNewEmployee(@RequestBody Product product)
	{
	   Product pro=productRepository.save(product);
	   return pro;
		
	}
	
	@GetMapping("/employee")
	public List<Product> getAllEmployees()
	{
	    List<Product> employees =	productRepository.findAll();
	    return employees;
	}
	
	
	@GetMapping("/employee/{id}")
	public Product getEmployeeById(@PathVariable int id)
	{
		Optional<Product> empoptional = productRepository.findById(id);
		
		Product pro2=null;
		
		if(empoptional.isPresent())
		{
			pro2=empoptional.get();
		}
		   return pro2;
	}
	
	@DeleteMapping("/employee/{id}")
	public String deleteEmployeeById(@PathVariable int id)
	{
		  if(productRepository.existsById(id))
		        productRepository.deleteById(id);
		  else
			  return "id "+ id +" not found to delete";
		
			  
    return "id "+ id +" is deleted";
	}
	
	
	
}
