package com.canlender.service;


	import org.springframework.beans.factory.annotation.Autowired;
	import org.springframework.stereotype.Service;

import com.canlender.entity.TimesheetEntry;
import com.canlender.repository.TimesheetEntryRepository;

import jakarta.transaction.Transactional;

import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;
import java.util.Optional;

	@Service
	public class TimeSheetServiceImpl implements TimeSheetService {

	    @Autowired
	    private TimesheetEntryRepository timeSheetRepository;

		@Override
		public List<TimesheetEntry> getAllTimeSheetEntries() {

	        return timeSheetRepository.findAll();
		}

		@Override
		public TimesheetEntry saveTimeSheetEntry(TimesheetEntry timeSheetEntry) {
			// TODO Auto-generated method stub
	        return timeSheetRepository.save(timeSheetEntry);
		}

		


		@Override
		public void deleteTimeSheetEntry(Long id) {
			// TODO Auto-generated method stub
	        timeSheetRepository.deleteById(id);
		}

		@Override
		public TimesheetEntry updateTimeSheetEntryStatus(Long id, String status, String reason) {
			// TODO Auto-generated method stub
			return null;
		}

		public List<TimesheetEntry> getAllEntries() {
	        return timeSheetRepository.findAll();
	    }

		@Override
		public List<TimesheetEntry> updateEntriesStatus(List<Entry> entries) {

		        // Iterate through the list of entries and update their status
		        for (Entry entry : entries) {
		            // Update the status of the entry (replace with your actual logic)
		            ((TimesheetEntry) entry).setStatus("UpdatedStatus");
		        }

		        // Assuming that you have a method to convert Entry to TimesheetEntry
		        List<TimesheetEntry> updatedEntries = convertToTimesheetEntries(entries);

		        // Return the updated entries
		        return updatedEntries;
		    }

		    // Placeholder method for converting Entry to TimesheetEntry
		    private List<TimesheetEntry> convertToTimesheetEntries(List<Entry> entries) {
		        // Implementation to convert Entry to TimesheetEntry
		        // ...

		        return convertToTimesheetEntries(null);
		    }
		
		
		}

		

	   
		

		

		
		
		
		
		
		/*@Transactional
	    public List<TimesheetEntry> updateEntriesStatus(List<TimesheetEntry> requests) {
			 List<TimesheetEntry> updatedEntries = new ArrayList<>();

		        for (TimesheetEntry request : requests) {
		            Optional<TimesheetEntry> optionalEntry = timeSheetRepository.findById(request.getId());
		            
		            if (optionalEntry.isPresent()) {
		                TimesheetEntry entry = optionalEntry.get();
		                entry.setStatus(request.getStatus());
		                entry.setReason(request.getReason());

		                // Perform any additional logic if needed

		                updatedEntries.add(timeSheetRepository.save(entry));
		            }
		        }

		        return updatedEntries;
		    }*/	
		
	}

		
	
		
	